<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>clojure on Saaientist</title>
    <link>/tags/clojure/</link>
    <description>Recent content in clojure on Saaientist</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 30 Mar 2023 18:45:00 +0200</lastBuildDate><atom:link href="/tags/clojure/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Clojurescript, re-frame and P5</title>
      <link>/posts/reframe-vis-part2/</link>
      <pubDate>Thu, 30 Mar 2023 18:45:00 +0200</pubDate>
      
      <guid>/posts/reframe-vis-part2/</guid>
      <description>I’m trying out creating generative art using clojurescript and quil (a clojurescript implementation of P5).
Routing and directory structure The main issue to be solved was to get routing working, so that I don’t have to go into the source code to switch between visuals.
In the previous post of visualisation in clojurescript I created rect and circle in the views.cljs file. That’s not how it should be done. The views.</description>
    </item>
    
    <item>
      <title>Clojurescript, re-frame and modular data visualisation</title>
      <link>/posts/clojure-reframe-vis/</link>
      <pubDate>Sat, 06 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/clojure-reframe-vis/</guid>
      <description>One of the issues we still have is how to combine our custom data visualisations in multi-view dashboards with brushing/linking. We’ll have a programmer work on this for the next two years, but as clojure is a bit of a hobby I’d like to try that out as well. It appears that clojurescript re-frame fits the bill.
Get set up: 1 2 3 lein new re-frame my-project cd my-project lein figwheel dev my-project/resources/public/index.</description>
    </item>
    
  </channel>
</rss>
