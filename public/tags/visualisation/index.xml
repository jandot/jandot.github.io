<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>visualisation on Saaientist</title>
    <link>/tags/visualisation/</link>
    <description>Recent content in visualisation on Saaientist</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 24 Mar 2024 15:06:00 +0200</lastBuildDate><atom:link href="/tags/visualisation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Basic D3 brush in svelte</title>
      <link>/posts/brush-in-svelte/</link>
      <pubDate>Sun, 24 Mar 2024 15:06:00 +0200</pubDate>
      
      <guid>/posts/brush-in-svelte/</guid>
      <description>Single plot A simple proof-of-principle to create brushing-linking between 2 SVG scatterplots in svelte. Based on the Observable notebook at https://observablehq.com/@d3/brush-filter, I was able to distill the following. The idea is that we have a RectangularBrush component that can wrap around an SVG with circles (or whatever). The brush component checks if each datapoint is within its boundaries, and sets the value for that component’s ID to true in a selected object.</description>
    </item>
    
    <item>
      <title>Scatterplot in regl</title>
      <link>/posts/scatterplot_in_regl/</link>
      <pubDate>Wed, 17 May 2023 17:45:00 +0200</pubDate>
      
      <guid>/posts/scatterplot_in_regl/</guid>
      <description>During our biological data visualisation workshop at the EBI I was made aware of a javascript library that makes it straightforward to create scatterplots of large datasets. How large? The demo at https://flekschas.github.io/regl-scatterplot/ includes an example of 20M datapoints. That library is regl-scatterplot which is available at https://github.com/flekschas/regl-scatterplot, and based on regl which &amp;#34;simplifies WebGL programming by removing as much shared state as it can get away with&amp;#34;.
Figure 1.</description>
    </item>
    
    <item>
      <title>Clojurescript, re-frame and P5</title>
      <link>/posts/reframe-vis-part2/</link>
      <pubDate>Thu, 30 Mar 2023 18:45:00 +0200</pubDate>
      
      <guid>/posts/reframe-vis-part2/</guid>
      <description>I’m trying out creating generative art using clojurescript and quil (a clojurescript implementation of P5).
Routing and directory structure The main issue to be solved was to get routing working, so that I don’t have to go into the source code to switch between visuals.
In the previous post of visualisation in clojurescript I created rect and circle in the views.cljs file. That’s not how it should be done. The views.</description>
    </item>
    
    <item>
      <title>Molecular structures in svelte</title>
      <link>/posts/molecule_viewer/</link>
      <pubDate>Fri, 23 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>/posts/molecule_viewer/</guid>
      <description>Different javascript libraries are available for displaying molecular structures, such as NGL and 3Dmol.js.
We’ve integrated a structure viewer in our (award-winning) proof-of-concept tool for exploring protein post-translational modifications EProm, but that required quite a bit of tweaking.
But here’s a minimal example for viewing the structure for CYP2D6, using NGL.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 &amp;lt;svelte:head&amp;gt; &amp;lt;script src=&amp;#34;https://unpkg.</description>
    </item>
    
    <item>
      <title>Basic scatterplots in Threlte</title>
      <link>/posts/basic_threlte/</link>
      <pubDate>Thu, 17 Nov 2022 21:45:00 +0200</pubDate>
      
      <guid>/posts/basic_threlte/</guid>
      <description>Svelte is great for data visualisation, but for larger datasets the simple declarative approach to drawing &amp;lt;circle&amp;gt;-s inside an &amp;lt;svg&amp;gt; doesn’t cut it anymore. Other libraries like three.js are capable of handling more data, but they are written for 3D visualisation instead of 2D plots.
Below, I show a proof-of-concept for a three.js-based 2D scatterplot with 5,000 points.
Figure 1. The final image…​ For installation of svelte-kit and threlte, I refer to their own websites.</description>
    </item>
    
    <item>
      <title>Svelte in Asciidoc</title>
      <link>/posts/svelte-in-asciidoc/</link>
      <pubDate>Thu, 07 Jul 2022 14:16:08 +0200</pubDate>
      
      <guid>/posts/svelte-in-asciidoc/</guid>
      <description>Sometimes you want to add interactive material or custom visualisations to a site built with asciidoc. Luckily, it is possible to do so. An example can be found in my datavis technologies material here.
The following steps are based on this blog post:https://dtang.dev/2020-01-25-adding-svelte-3-to-a-jekyll-site
Step 1: Create a separate directory for the svelte-components, including rollup.config.js, etc.
Step 2: Create a svelte-components/src directory with:
the svelte component files
main.js
Step 3: For each component you want to use, add the following to main.</description>
    </item>
    
    <item>
      <title>Vega-lite in svelte</title>
      <link>/posts/vega-lite-in-svelte/</link>
      <pubDate>Tue, 05 Jul 2022 16:04:00 +0200</pubDate>
      
      <guid>/posts/vega-lite-in-svelte/</guid>
      <description>There are many ways of incorporating graphics and plots in svelte and svelte-kit applications. I can definitely recommend checking out this talk by Matthias Stahl, graphics lead at Der Spiegel in Germany. This talk goes specifically through creating animated plots in svelte at the 24:46 mark.
So you can code your own SVG in svelte, use D3, P5, Three.js, etc. In the code below, we use vega-lite.
What I wanted to achieve with this component, is that the user can choose which dimensions are plotted against each other in a scatterplot.</description>
    </item>
    
    <item>
      <title>Clojurescript, re-frame and modular data visualisation</title>
      <link>/posts/clojure-reframe-vis/</link>
      <pubDate>Sat, 06 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/clojure-reframe-vis/</guid>
      <description>One of the issues we still have is how to combine our custom data visualisations in multi-view dashboards with brushing/linking. We’ll have a programmer work on this for the next two years, but as clojure is a bit of a hobby I’d like to try that out as well. It appears that clojurescript re-frame fits the bill.
Get set up: 1 2 3 lein new re-frame my-project cd my-project lein figwheel dev my-project/resources/public/index.</description>
    </item>
    
  </channel>
</rss>
